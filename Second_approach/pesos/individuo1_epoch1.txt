OrderedDict([('fc1.weight', tensor([[ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.0000],
        [ 0.0000, -0.0000,  0.0000,  ..., -0.0086, -0.0000,  0.0141],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0297, -0.0000],
        ...,
        [ 0.0000,  0.0000, -0.0244,  ..., -0.0000, -0.0033,  0.0000],
        [ 0.0000,  0.0000, -0.0000,  ...,  0.0309,  0.0000,  0.0000],
        [-0.0000, -0.0000, -0.0134,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc1.bias', tensor([-6.3396e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00, -0.0000e+00,  9.2335e-05, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00,  2.8383e-03, -0.0000e+00, -9.2152e-03,
         0.0000e+00,  9.7431e-05, -0.0000e+00, -0.0000e+00, -1.5180e-02,
         0.0000e+00, -2.3978e-02,  0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.9699e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         3.4751e-03,  3.3278e-03, -1.1488e-02, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -3.4766e-03,  0.0000e+00, -1.6198e-02, -0.0000e+00,
         2.8439e-02,  0.0000e+00, -0.0000e+00, -9.7440e-03, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -3.9447e-03, -0.0000e+00,
        -0.0000e+00,  9.9926e-03,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -2.2379e-02,  0.0000e+00, -0.0000e+00,  0.0000e+00,
        -1.6884e-03, -1.7810e-02,  0.0000e+00,  3.4574e-02,  1.5172e-02,
        -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00, -1.6933e-02,
        -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00, -9.1604e-03,
         0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,  9.9466e-03,
        -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.2019e-02,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -2.7456e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  2.0115e-02,  0.0000e+00, -0.0000e+00,  2.6079e-02,
         0.0000e+00, -0.0000e+00, -2.3107e-02, -0.0000e+00, -0.0000e+00,
         1.2531e-04, -0.0000e+00,  0.0000e+00,  1.4999e-02,  0.0000e+00,
         3.4679e-03, -0.0000e+00,  2.0971e-02,  2.2041e-02, -0.0000e+00,
        -2.9253e-02,  4.5828e-03,  5.9067e-03, -0.0000e+00,  1.7916e-02,
         0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
         2.4669e-02,  1.2742e-02,  1.2683e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00,  9.0383e-05,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -1.5432e-03, -0.0000e+00, -0.0000e+00,
         3.2408e-02,  0.0000e+00, -2.9814e-02,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  1.4806e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00,  3.4995e-02,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -2.0382e-02, -0.0000e+00,
         0.0000e+00,  0.0000e+00, -1.0352e-02, -0.0000e+00,  1.8508e-02,
        -2.8928e-02,  0.0000e+00,  2.7307e-02,  1.6092e-02,  1.9633e-02,
         2.3571e-02, -0.0000e+00, -0.0000e+00, -2.3970e-02,  0.0000e+00,
        -1.5992e-02,  0.0000e+00, -2.8415e-02,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -2.4223e-02, -3.3339e-02, -0.0000e+00,  0.0000e+00,
        -0.0000e+00,  1.8634e-02,  0.0000e+00, -3.3436e-02, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  2.3111e-02,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  2.3989e-02, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -3.3062e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -2.8452e-02, -1.6318e-02, -3.2232e-02, -1.3647e-02, -7.7906e-03,
         4.0962e-03, -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  2.5774e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.0991e-02, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         3.0912e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00, -6.2180e-03,
         0.0000e+00,  8.7094e-03, -0.0000e+00, -1.2888e-02, -8.5162e-03,
        -0.0000e+00,  1.3380e-02, -0.0000e+00,  0.0000e+00,  0.0000e+00,
        -3.5100e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -1.6581e-02, -0.0000e+00, -0.0000e+00,
         3.0456e-02,  0.0000e+00,  2.0852e-02, -0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  1.3179e-02, -0.0000e+00, -2.6277e-02, -0.0000e+00,
        -0.0000e+00, -2.4967e-02,  0.0000e+00,  2.0398e-02, -0.0000e+00,
         2.5705e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
         3.5018e-03,  1.8764e-02,  0.0000e+00, -1.3367e-02,  0.0000e+00,
         1.2146e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -2.5283e-02,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  3.8847e-03, -7.3661e-03, -0.0000e+00,  0.0000e+00,
         3.3452e-02,  0.0000e+00,  2.7236e-02, -0.0000e+00,  2.2532e-02,
        -0.0000e+00,  1.9929e-02, -2.6630e-02, -0.0000e+00, -0.0000e+00,
        -1.4769e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         9.0102e-03, -2.3191e-02, -1.2839e-02, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -1.8655e-02, -0.0000e+00,
        -2.7783e-02, -0.0000e+00,  0.0000e+00, -1.0881e-02,  0.0000e+00,
        -2.2855e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -7.7988e-03, -0.0000e+00, -0.0000e+00,  3.5611e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -1.3470e-02, -1.0056e-02,
        -0.0000e+00,  1.7066e-02, -1.8490e-02, -0.0000e+00,  2.5968e-02,
         0.0000e+00,  0.0000e+00,  1.0466e-02, -2.1590e-02, -0.0000e+00,
        -3.2841e-02,  0.0000e+00,  2.6667e-02,  0.0000e+00, -0.0000e+00,
         0.0000e+00,  2.9670e-02,  3.3603e-02,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  0.0000e+00, -1.7790e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -2.2401e-02,
        -0.0000e+00, -9.2435e-03,  7.7976e-03,  3.4785e-02,  0.0000e+00,
         2.9264e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,  1.0293e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  1.2518e-02, -0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,  3.4702e-02,
        -0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  1.2047e-02, -8.4099e-04, -6.7019e-03,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         2.9589e-02, -2.4086e-02, -5.3344e-03, -2.4580e-02, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  8.6363e-03,  1.9766e-02, -0.0000e+00,  1.3191e-02,
         3.4775e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         3.6529e-03,  0.0000e+00,  0.0000e+00, -0.0000e+00,  1.5439e-02,
         0.0000e+00, -1.7691e-02,  0.0000e+00, -0.0000e+00,  1.4223e-02,
         0.0000e+00,  3.2778e-02,  5.8445e-03, -1.6226e-02,  0.0000e+00,
         1.1796e-03,  0.0000e+00,  3.3824e-02,  0.0000e+00,  0.0000e+00,
        -0.0000e+00,  1.9034e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -3.5775e-03, -0.0000e+00, -0.0000e+00,  0.0000e+00, -1.6427e-02,
         0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00], device='cuda:0')), ('fc2.weight', tensor([[ 0.0000, -0.0000, -0.0000,  ...,  0.0141,  0.0004,  0.0000],
        [ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0338,  0.0000],
        [-0.0000,  0.0417, -0.0268,  ...,  0.0000,  0.0013,  0.0000],
        ...,
        [ 0.0000, -0.0000, -0.0234,  ..., -0.0000,  0.0000, -0.0000],
        [ 0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0009,  0.0406,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc2.bias', tensor([-0.0000,  0.0000, -0.0000, -0.0303,  0.0022,  0.0000,  0.0429, -0.0000,
        -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000,
        -0.0000, -0.0105,  0.0000, -0.0161, -0.0047,  0.0122,  0.0055, -0.0355,
        -0.0000, -0.0000, -0.0000,  0.0000, -0.0000,  0.0308, -0.0067, -0.0281,
        -0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0042, -0.0432,
        -0.0000,  0.0000,  0.0000,  0.0000,  0.0435,  0.0000, -0.0000,  0.0000,
         0.0000, -0.0110, -0.0401,  0.0080, -0.0000, -0.0171, -0.0000, -0.0000,
         0.0000, -0.0000,  0.0284, -0.0000, -0.0416, -0.0000,  0.0000, -0.0036,
        -0.0379, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000,  0.0011,  0.0000,
        -0.0000, -0.0000,  0.0000,  0.0127, -0.0000, -0.0249, -0.0000, -0.0000,
         0.0000,  0.0294, -0.0300, -0.0000, -0.0000, -0.0000, -0.0133,  0.0000,
         0.0169,  0.0000, -0.0000,  0.0017,  0.0000, -0.0000,  0.0064, -0.0408,
         0.0000, -0.0000, -0.0000,  0.0148, -0.0296, -0.0000,  0.0243, -0.0000,
         0.0000,  0.0131,  0.0000, -0.0000, -0.0000, -0.0051,  0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000, -0.0395, -0.0428,  0.0150,  0.0236,
         0.0000, -0.0000,  0.0000,  0.0000, -0.0287,  0.0346,  0.0000,  0.0000,
        -0.0000, -0.0136, -0.0000,  0.0000, -0.0235, -0.0000,  0.0000,  0.0335,
        -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0083,  0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0043, -0.0000,  0.0000,  0.0325, -0.0287,
         0.0000, -0.0125, -0.0000,  0.0000, -0.0000,  0.0044, -0.0379,  0.0442,
         0.0340, -0.0000, -0.0000,  0.0104,  0.0312,  0.0000, -0.0168, -0.0000,
         0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0093,
         0.0000, -0.0000, -0.0000, -0.0000, -0.0437,  0.0252, -0.0000, -0.0000,
        -0.0000,  0.0000, -0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0000,
        -0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0000,  0.0352, -0.0254,
         0.0000,  0.0178,  0.0000, -0.0000, -0.0259, -0.0118,  0.0000, -0.0000,
         0.0000,  0.0000, -0.0000,  0.0000,  0.0000, -0.0000, -0.0032, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
         0.0000, -0.0082, -0.0000, -0.0027, -0.0000,  0.0273, -0.0000, -0.0214,
        -0.0000, -0.0122,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000,  0.0000,  0.0000, -0.0167,  0.0414,  0.0000,  0.0000, -0.0000,
         0.0000,  0.0194, -0.0365, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000],
       device='cuda:0')), ('fc3.weight', tensor([[ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0391,  0.0095, -0.0000,  ..., -0.0000,  0.0000,  0.0000],
        [-0.0000,  0.0235, -0.0000,  ...,  0.0000,  0.0388, -0.0000],
        ...,
        [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000, -0.0000],
        [-0.0000,  0.0000,  0.0270,  ...,  0.0000,  0.0000,  0.0462],
        [-0.0000, -0.0000, -0.0186,  ...,  0.0000,  0.0000, -0.0000]],
       device='cuda:0')), ('fc3.bias', tensor([-0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000, -0.0161,  0.0000,
        -0.0014,  0.0000,  0.0000, -0.0000, -0.0000, -0.0325,  0.0273, -0.0000,
        -0.0000,  0.0000,  0.0078, -0.0466, -0.0000, -0.0000,  0.0000,  0.0233,
        -0.0000,  0.0000,  0.0368, -0.0000,  0.0000,  0.0000, -0.0043,  0.0000,
         0.0443, -0.0184, -0.0000,  0.0000, -0.0000, -0.0000,  0.0000, -0.0340,
         0.0089,  0.0000, -0.0156,  0.0000,  0.0000,  0.0000, -0.0000,  0.0000,
         0.0000,  0.0162,  0.0000,  0.0000,  0.0089, -0.0000,  0.0000,  0.0000,
         0.0070, -0.0391, -0.0299,  0.0000,  0.0000,  0.0000, -0.0331,  0.0000,
         0.0000, -0.0000,  0.0000, -0.0578,  0.0000, -0.0513,  0.0422, -0.0000,
         0.0000, -0.0000, -0.0000, -0.0000, -0.0015, -0.0061,  0.0000, -0.0000,
        -0.0000, -0.0574,  0.0443,  0.0000, -0.0000, -0.0617, -0.0466,  0.0000,
        -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000,
         0.0000,  0.0000, -0.0078,  0.0551,  0.0000, -0.0000,  0.0000,  0.0000,
        -0.0000,  0.0496,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0000,
        -0.0211, -0.0493,  0.0000,  0.0000, -0.0000, -0.0509,  0.0000,  0.0571,
        -0.0100,  0.0000,  0.0000, -0.0455,  0.0000, -0.0536,  0.0000, -0.0000],
       device='cuda:0')), ('fc4.weight', tensor([[ 0.0000,  0.0000, -0.0000,  ...,  0.0772, -0.0000, -0.0000],
        [-0.0015,  0.0010, -0.0000,  ...,  0.0822,  0.0177,  0.0863],
        [ 0.0000, -0.0175,  0.0000,  ..., -0.0000,  0.0000,  0.0000],
        ...,
        [-0.0380,  0.0804, -0.0735,  ...,  0.0438, -0.0330,  0.0244],
        [-0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000, -0.0692]],
       device='cuda:0')), ('fc4.bias', tensor([ 0.0000,  0.0000,  0.0401, -0.0000, -0.0000, -0.0000, -0.0443,  0.0000,
        -0.0611,  0.0000], device='cuda:0'))])