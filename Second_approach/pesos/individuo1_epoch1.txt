OrderedDict([('fc1.weight', tensor([[ 0.0000,  0.0000,  0.0316,  ...,  0.0000,  0.0000, -0.0000],
        [ 0.0119,  0.0000, -0.0013,  ..., -0.0031,  0.0098,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.0000],
        ...,
        [-0.0000,  0.0000, -0.0333,  ..., -0.0000,  0.0027, -0.0000],
        [ 0.0000, -0.0000,  0.0000,  ..., -0.0234,  0.0169, -0.0000],
        [ 0.0000,  0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc1.bias', tensor([ 0.0000e+00,  0.0000e+00, -0.0000e+00, -2.6552e-02, -2.3451e-02,
         2.1925e-02,  7.0008e-03,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -2.1240e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -5.7853e-03, -2.7470e-03, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,  1.3099e-02,
        -3.0758e-02, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -2.9417e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00,  2.6544e-02, -0.0000e+00,  0.0000e+00,  0.0000e+00,
        -1.1586e-03, -2.9357e-02,  0.0000e+00,  1.4653e-02,  0.0000e+00,
         0.0000e+00,  4.8811e-03,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  3.0664e-02, -1.8740e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -3.0867e-02,  0.0000e+00, -0.0000e+00,  0.0000e+00,
         1.0139e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -3.3058e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.4404e-02,
         7.5856e-03,  0.0000e+00,  0.0000e+00,  0.0000e+00,  9.7183e-03,
        -2.4291e-02,  0.0000e+00,  0.0000e+00, -4.8092e-03, -3.4681e-02,
         0.0000e+00,  0.0000e+00,  2.4194e-02, -1.0465e-02,  3.5297e-02,
         2.5143e-02,  0.0000e+00,  0.0000e+00, -1.0049e-02, -0.0000e+00,
         0.0000e+00, -1.1011e-02, -0.0000e+00, -2.1099e-03,  0.0000e+00,
        -1.9968e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -1.7739e-02, -0.0000e+00, -0.0000e+00, -2.4853e-02,
         0.0000e+00,  0.0000e+00, -2.0374e-02,  0.0000e+00,  3.2012e-02,
         3.5672e-02, -2.4792e-02,  0.0000e+00, -0.0000e+00,  2.0981e-02,
         8.3299e-03,  0.0000e+00, -0.0000e+00,  1.8744e-02,  2.3561e-02,
         2.2504e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00,  1.3047e-02,
        -0.0000e+00, -0.0000e+00, -2.4311e-02,  0.0000e+00, -0.0000e+00,
        -9.5316e-03,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -2.4303e-02,  0.0000e+00, -0.0000e+00, -2.0547e-02,  0.0000e+00,
         0.0000e+00, -1.4311e-02,  0.0000e+00,  2.0669e-02,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -2.1810e-02, -2.1746e-02, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00,
         6.5744e-03, -0.0000e+00,  2.9969e-02,  0.0000e+00,  2.6675e-03,
         0.0000e+00, -0.0000e+00, -1.6560e-02, -0.0000e+00,  0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00, -0.0000e+00,  2.8284e-02,  0.0000e+00,
         1.7940e-02, -0.0000e+00, -0.0000e+00,  1.0094e-02,  0.0000e+00,
        -0.0000e+00,  0.0000e+00,  3.1373e-02, -0.0000e+00, -1.1838e-02,
         0.0000e+00,  0.0000e+00, -1.3208e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  2.9239e-03, -4.9628e-03,  0.0000e+00, -0.0000e+00,
        -1.9864e-02,  0.0000e+00, -1.4021e-02,  0.0000e+00,  0.0000e+00,
        -0.0000e+00,  1.6419e-02,  2.5239e-02,  6.7156e-03, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  1.5094e-02, -2.6660e-02, -0.0000e+00,
        -0.0000e+00,  8.9783e-05,  4.8591e-03,  0.0000e+00,  1.4569e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -0.0000e+00,  2.3759e-02,  0.0000e+00, -0.0000e+00,
        -1.1802e-02, -0.0000e+00,  0.0000e+00, -1.6605e-02,  0.0000e+00,
        -0.0000e+00,  0.0000e+00,  0.0000e+00, -2.4141e-02,  3.3026e-02,
         0.0000e+00,  2.3648e-02, -0.0000e+00, -2.7541e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  1.5695e-02, -1.4791e-02,
         0.0000e+00,  0.0000e+00, -0.0000e+00, -1.7624e-02,  1.3657e-02,
        -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -3.0378e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -1.6519e-02,  0.0000e+00, -0.0000e+00, -3.5203e-02,  0.0000e+00,
        -0.0000e+00,  0.0000e+00,  9.7366e-03, -0.0000e+00, -0.0000e+00,
        -2.4206e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         1.2366e-02, -2.7821e-02,  0.0000e+00,  8.5108e-03,  0.0000e+00,
         1.1250e-02, -0.0000e+00, -0.0000e+00,  3.7004e-03,  0.0000e+00,
         0.0000e+00,  0.0000e+00, -0.0000e+00, -4.7394e-03, -0.0000e+00,
         3.6071e-03, -8.1741e-03,  5.7002e-03, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -2.8606e-02,
         3.5214e-02, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -1.5842e-02, -0.0000e+00,  0.0000e+00,  3.1196e-02,
         0.0000e+00,  1.3391e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00, -1.8828e-02,  0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -1.9828e-02,  1.8895e-02,  0.0000e+00,
         2.7554e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -1.7786e-02,  2.4898e-02,  0.0000e+00, -2.1931e-02,
         1.6417e-02, -1.7808e-02,  2.3050e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  1.2939e-02, -0.0000e+00, -0.0000e+00,  2.8673e-02,
        -0.0000e+00,  1.1721e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00,  3.2971e-02,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -2.2273e-02,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,  4.9529e-03,
         0.0000e+00,  0.0000e+00,  8.9748e-03,  2.1641e-02,  1.1068e-02,
        -1.9153e-02,  0.0000e+00, -0.0000e+00, -3.3184e-02, -0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -1.1685e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00, -3.1606e-02,
        -0.0000e+00, -0.0000e+00, -8.5931e-03,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -1.4966e-03,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00,  5.2469e-03,  0.0000e+00, -0.0000e+00,
        -1.1778e-02, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         2.4633e-02,  2.3763e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -2.5200e-02, -0.0000e+00,  0.0000e+00,  0.0000e+00, -1.4082e-02,
        -0.0000e+00,  0.0000e+00, -3.3753e-02, -0.0000e+00,  0.0000e+00,
        -2.8932e-03, -0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -0.0000e+00, -2.8846e-02, -0.0000e+00,  0.0000e+00,
         4.5348e-03,  0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00, -2.1290e-02,
        -2.3586e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
        -5.8618e-03, -0.0000e+00,  0.0000e+00, -0.0000e+00,  9.7078e-03,
         0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00, -1.4483e-02,
        -0.0000e+00, -2.7107e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -1.2580e-02, -0.0000e+00,  0.0000e+00, -3.3214e-02, -6.9841e-03,
         1.1317e-02,  0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
         0.0000e+00,  1.4639e-02,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00,  0.0000e+00, -3.7920e-03,  1.9555e-02,
        -0.0000e+00, -0.0000e+00], device='cuda:0')), ('fc2.weight', tensor([[ 0.0000, -0.0000,  0.0000,  ..., -0.0000, -0.0124, -0.0111],
        [ 0.0000, -0.0000,  0.0334,  ...,  0.0000,  0.0000, -0.0000],
        [ 0.0245,  0.0412,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000,  0.0253,  0.0000,  ...,  0.0000, -0.0146,  0.0127],
        [-0.0319, -0.0000,  0.0000,  ..., -0.0423,  0.0000,  0.0337],
        [-0.0000,  0.0000,  0.0000,  ...,  0.0028, -0.0000,  0.0000]],
       device='cuda:0')), ('fc2.bias', tensor([-0.0000,  0.0000,  0.0341,  0.0000,  0.0390,  0.0317, -0.0000, -0.0000,
         0.0000, -0.0104, -0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000, -0.0000, -0.0318, -0.0000, -0.0352,  0.0000,
        -0.0383,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000, -0.0000, -0.0000, -0.0000,  0.0000,  0.0059, -0.0000,  0.0000,
        -0.0000,  0.0274,  0.0000, -0.0042, -0.0349, -0.0000, -0.0000, -0.0000,
         0.0257,  0.0149,  0.0000,  0.0000,  0.0000, -0.0030,  0.0087,  0.0000,
        -0.0183,  0.0000, -0.0000, -0.0000, -0.0263, -0.0000,  0.0217, -0.0370,
         0.0000, -0.0272, -0.0000,  0.0000, -0.0100,  0.0000, -0.0359,  0.0000,
         0.0000,  0.0000,  0.0024, -0.0087, -0.0000,  0.0000,  0.0243,  0.0000,
        -0.0000, -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0428, -0.0342,
         0.0000, -0.0000,  0.0000,  0.0205,  0.0434,  0.0000, -0.0000, -0.0000,
        -0.0000,  0.0018,  0.0342, -0.0000,  0.0198, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000, -0.0120,  0.0000, -0.0000,  0.0278, -0.0071,
        -0.0000, -0.0000,  0.0000,  0.0000,  0.0203,  0.0000,  0.0000, -0.0015,
        -0.0145, -0.0201,  0.0000,  0.0000, -0.0000,  0.0031,  0.0000,  0.0000,
        -0.0000, -0.0279, -0.0000,  0.0000,  0.0000, -0.0000, -0.0323,  0.0000,
        -0.0000, -0.0000,  0.0319, -0.0000, -0.0167,  0.0000,  0.0012, -0.0000,
        -0.0006, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, -0.0000, -0.0126, -0.0324, -0.0033,  0.0000, -0.0000, -0.0000,
        -0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000, -0.0339, -0.0000,
        -0.0000, -0.0000,  0.0036,  0.0169, -0.0000, -0.0000, -0.0000,  0.0000,
        -0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000,  0.0000,  0.0000,
         0.0306,  0.0430,  0.0000,  0.0000, -0.0000,  0.0000,  0.0000, -0.0363,
        -0.0256,  0.0416,  0.0000,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0220,  0.0018, -0.0000, -0.0000, -0.0227, -0.0000, -0.0418,
        -0.0000, -0.0000, -0.0000, -0.0000, -0.0000,  0.0000, -0.0272, -0.0000,
        -0.0000, -0.0195, -0.0211,  0.0000, -0.0112,  0.0296,  0.0153, -0.0000,
         0.0000, -0.0180, -0.0000, -0.0189, -0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000,  0.0000, -0.0344,  0.0000, -0.0010, -0.0014, -0.0000,
         0.0292, -0.0153, -0.0000, -0.0000, -0.0000, -0.0000, -0.0097, -0.0000,
         0.0000,  0.0000,  0.0063,  0.0000,  0.0000, -0.0140, -0.0000, -0.0000],
       device='cuda:0')), ('fc3.weight', tensor([[ 0.0000, -0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.0410],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000,  0.0000],
        [ 0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0521,  0.0136],
        ...,
        [-0.0000,  0.0000, -0.0000,  ...,  0.0000, -0.0000,  0.0000],
        [-0.0000, -0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0000, -0.0100,  ..., -0.0000, -0.0613, -0.0010]],
       device='cuda:0')), ('fc3.bias', tensor([-0.0000,  0.0406, -0.0000, -0.0000, -0.0610, -0.0000, -0.0000,  0.0205,
         0.0000, -0.0239,  0.0582,  0.0000, -0.0000,  0.0000,  0.0000, -0.0000,
         0.0587, -0.0000,  0.0242, -0.0431,  0.0372,  0.0158,  0.0000, -0.0000,
        -0.0000, -0.0000,  0.0562,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
         0.0000, -0.0000,  0.0000, -0.0000, -0.0411, -0.0000,  0.0288, -0.0000,
         0.0000, -0.0000,  0.0000, -0.0000,  0.0000,  0.0245,  0.0000, -0.0402,
        -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
        -0.0000,  0.0000, -0.0187,  0.0000,  0.0000, -0.0000,  0.0000, -0.0395,
         0.0000,  0.0000, -0.0000,  0.0101, -0.0000, -0.0219,  0.0000, -0.0377,
         0.0083, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000,  0.0002,  0.0000,
         0.0584,  0.0000, -0.0000,  0.0000, -0.0000, -0.0000,  0.0321,  0.0042,
        -0.0604, -0.0449,  0.0517,  0.0000,  0.0343, -0.0000,  0.0000,  0.0000,
         0.0083, -0.0000, -0.0493,  0.0000, -0.0000,  0.0477, -0.0000, -0.0000,
         0.0000,  0.0000,  0.0203,  0.0000,  0.0204, -0.0000,  0.0441, -0.0000,
        -0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0000,  0.0215,
         0.0000,  0.0000, -0.0220, -0.0622, -0.0000, -0.0000, -0.0321,  0.0000],
       device='cuda:0')), ('fc4.weight', tensor([[-0.0000,  0.0738, -0.0150,  ..., -0.0000, -0.0000,  0.0000],
        [ 0.0254, -0.0000,  0.0367,  ..., -0.0000,  0.0000,  0.0019],
        [ 0.0000, -0.0000,  0.0000,  ...,  0.0634,  0.0000, -0.0000],
        ...,
        [ 0.0000, -0.0000, -0.0000,  ...,  0.0000, -0.0581, -0.0473],
        [ 0.0000,  0.0819, -0.0280,  ..., -0.0000,  0.0000, -0.0000],
        [ 0.0082,  0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='cuda:0')), ('fc4.bias', tensor([-0.0000, -0.0000,  0.0000, -0.0000,  0.0000, -0.0000,  0.0778, -0.0147,
        -0.0000, -0.0328], device='cuda:0'))])