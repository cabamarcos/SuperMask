OrderedDict([('fc1.weight', tensor([[ 0.0000,  0.0000,  0.0000,  ..., -0.0019,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0157,  ..., -0.0019,  0.0000,  0.0049],
        ...,
        [ 0.0096,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0584,  0.0000,  ...,  0.0647,  0.0000,  0.0000],
        [ 0.0235, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc1.bias', tensor([-0.0000e+00, -0.0000e+00, -1.7632e-02,  1.3453e-02, -4.0385e-02,
         0.0000e+00, -0.0000e+00, -1.7599e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -6.7262e-02, -0.0000e+00,
        -1.2350e-02, -0.0000e+00, -1.7414e-03, -0.0000e+00,  0.0000e+00,
        -5.3370e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.9738e-02,
        -0.0000e+00,  1.0324e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -1.3576e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -5.5211e-02,  1.8692e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -2.1631e-02, -0.0000e+00, -1.4346e-02,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  4.3695e-04,  0.0000e+00,
        -0.0000e+00,  5.3585e-03, -4.1522e-03, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -1.4818e-03, -0.0000e+00, -3.0463e-02,  0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,  5.2407e-04,
        -3.7136e-02, -0.0000e+00,  0.0000e+00, -4.2511e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -2.3910e-02, -3.9568e-02,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -9.9068e-03, -0.0000e+00, -0.0000e+00, -3.2552e-02,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -4.8843e-03, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.5085e-02,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00, -2.0195e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.3042e-02,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -3.4464e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.1449e-02,
        -0.0000e+00,  2.8106e-02, -0.0000e+00, -0.0000e+00, -2.0472e-02,
         2.9175e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -6.3942e-02,
        -0.0000e+00,  8.5492e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  3.0121e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -8.0949e-03, -0.0000e+00, -0.0000e+00, -1.8242e-02,
        -0.0000e+00,  6.5324e-03, -0.0000e+00,  1.2469e-02, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -2.4809e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.2988e-02, -0.0000e+00,
         0.0000e+00, -3.1425e-02,  3.3539e-02, -0.0000e+00,  0.0000e+00,
        -0.0000e+00,  2.5885e-03, -0.0000e+00, -2.4096e-02, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -5.4941e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -2.7758e-02, -8.8468e-03, -0.0000e+00,
        -0.0000e+00, -1.4235e-02, -0.0000e+00,  3.1713e-02, -0.0000e+00,
        -3.7418e-02, -5.2735e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.0644e-03, -2.4223e-02,
        -0.0000e+00, -0.0000e+00, -5.0990e-02, -0.0000e+00, -6.1503e-02,
        -0.0000e+00,  1.5910e-02, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00,  5.0873e-03, -0.0000e+00,  3.3328e-03, -0.0000e+00,
        -0.0000e+00, -2.9104e-02, -0.0000e+00, -0.0000e+00,  1.1051e-02,
        -0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -3.5612e-03, -0.0000e+00,  0.0000e+00,
        -3.2380e-02, -0.0000e+00,  2.5062e-02,  0.0000e+00, -2.8807e-02,
        -6.9001e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.8547e-02,
        -0.0000e+00, -0.0000e+00, -4.0614e-03, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -3.4756e-02, -0.0000e+00,  2.5573e-02, -3.0862e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -1.7225e-02,
        -2.0745e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -2.0413e-02,  0.0000e+00,  0.0000e+00, -3.5116e-02,
        -4.1049e-02, -2.5161e-02,  3.7820e-03,  0.0000e+00,  1.5964e-03,
         0.0000e+00, -0.0000e+00, -3.3480e-02, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -8.8633e-02, -2.1153e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -1.8454e-04, -7.0984e-05,
        -6.4330e-03, -0.0000e+00, -0.0000e+00, -0.0000e+00, -1.6979e-02,
        -0.0000e+00, -1.0283e-02, -0.0000e+00,  1.5069e-02, -3.6751e-02,
        -2.2269e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00,  2.5363e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.1869e-02, -0.0000e+00,
        -3.4768e-02, -8.9449e-03,  3.3676e-04, -3.4314e-03, -2.5671e-03,
        -4.0857e-02, -0.0000e+00, -2.6547e-02,  0.0000e+00,  4.9299e-03,
        -4.7602e-02, -2.6618e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -2.2562e-02,  3.0319e-04,
         2.6760e-03,  1.6805e-02, -0.0000e+00, -4.6189e-02, -0.0000e+00,
        -0.0000e+00,  0.0000e+00, -0.0000e+00, -6.9713e-03, -0.0000e+00,
        -0.0000e+00, -0.0000e+00,  9.9550e-03,  0.0000e+00, -2.2478e-02,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
         1.1448e-02, -1.6614e-02,  2.8607e-02, -2.4358e-02, -3.3963e-02,
        -0.0000e+00, -0.0000e+00,  1.0386e-03, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -3.5341e-02,
        -3.5218e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -9.3753e-03,
        -3.6575e-02, -4.5718e-02, -0.0000e+00, -5.5436e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -5.1430e-02, -0.0000e+00,
        -3.6055e-02, -0.0000e+00,  4.2814e-03,  5.6731e-03,  9.7075e-03,
        -6.8808e-03, -2.3445e-02, -3.0537e-02, -0.0000e+00, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -4.0193e-02, -0.0000e+00, -2.7850e-02,
        -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00, -0.0000e+00,
         1.9400e-02,  0.0000e+00, -4.9131e-03,  0.0000e+00, -2.6222e-02,
        -0.0000e+00,  0.0000e+00, -1.2031e-02,  2.7371e-03, -0.0000e+00,
         0.0000e+00, -0.0000e+00, -3.2191e-02,  0.0000e+00,  1.5616e-02,
        -0.0000e+00, -0.0000e+00, -3.1016e-02, -0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.1891e-02, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -2.3428e-03,
        -4.0090e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -1.0731e-02,
        -2.0449e-02, -0.0000e+00, -7.8647e-03, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00, -0.0000e+00,
        -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
         0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -4.8752e-02,  0.0000e+00, -0.0000e+00, -0.0000e+00,  0.0000e+00,
        -0.0000e+00, -3.1139e-02, -0.0000e+00, -0.0000e+00, -1.4496e-02,
         3.1393e-02, -0.0000e+00, -0.0000e+00, -0.0000e+00, -0.0000e+00,
        -0.0000e+00,  0.0000e+00], device='cuda:0')), ('fc2.weight', tensor([[-0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.0000,  0.0000],
        [ 0.0000, -0.0000,  0.0000,  ...,  0.0000, -0.0000, -0.0000],
        [ 0.0000, -0.0560, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [ 0.0000, -0.0527,  0.0641,  ...,  0.0000,  0.0112,  0.0967],
        [-0.0000, -0.0049, -0.0226,  ..., -0.0000, -0.0434, -0.0821],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000,  0.0254, -0.0000]],
       device='cuda:0')), ('fc2.bias', tensor([ 0.0000,  0.0000,  0.0000,  0.0000, -0.0680, -0.0000,  0.0755, -0.0000,
        -0.0000,  0.0000, -0.0564,  0.0000,  0.0425, -0.0000, -0.0000,  0.0000,
         0.0000, -0.0000, -0.0000,  0.0000,  0.0000,  0.0000, -0.0496, -0.0000,
         0.0000, -0.0000,  0.0000,  0.0806, -0.0000,  0.0000,  0.0144,  0.0000,
         0.0000, -0.0000,  0.0000, -0.0343,  0.0476,  0.0883,  0.0000, -0.0312,
         0.0000,  0.0000, -0.0000,  0.0195,  0.0000,  0.0000,  0.0000,  0.0813,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0492, -0.0169,
         0.0000,  0.0000, -0.0017,  0.0869,  0.0010, -0.0000,  0.0000,  0.0359,
        -0.0000, -0.0027, -0.0000, -0.0000,  0.0067,  0.0764,  0.0000, -0.0367,
        -0.0000,  0.0000,  0.0575, -0.0000, -0.0000,  0.0000,  0.0247,  0.0000,
         0.0000, -0.0000,  0.0721,  0.0000, -0.0000, -0.0000, -0.0000,  0.1102,
         0.0000, -0.0671, -0.0000, -0.0000,  0.0916, -0.0000,  0.0000, -0.0000,
        -0.0641,  0.0000,  0.0000,  0.1036,  0.0063, -0.0000,  0.0000,  0.0000,
         0.0309, -0.0000, -0.0000,  0.0000, -0.0000, -0.0000, -0.0000,  0.0000,
         0.0000,  0.0000,  0.0000, -0.0000, -0.0554,  0.0696,  0.0276,  0.0000,
         0.0000, -0.0023, -0.0000, -0.0411,  0.0360,  0.0000, -0.0000,  0.0000,
         0.1018, -0.0000,  0.0000,  0.0911,  0.0926,  0.0000, -0.0000, -0.0000,
        -0.0000, -0.0000, -0.0000, -0.0170, -0.0184,  0.0977,  0.0000, -0.0009,
         0.0050, -0.0000,  0.0000, -0.0000, -0.0000, -0.0254,  0.0000,  0.0922,
         0.0000,  0.0477, -0.0000,  0.0000,  0.0163, -0.0000,  0.0000,  0.0000,
         0.0049,  0.0000, -0.0000, -0.0000, -0.0531,  0.0000,  0.0000, -0.0000,
        -0.0000, -0.0000,  0.0000, -0.0271, -0.0000,  0.0000,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0000, -0.0000, -0.0000,
         0.0000,  0.0000, -0.0000,  0.0178, -0.0000, -0.0000, -0.0519,  0.0000,
        -0.0000,  0.0568,  0.0957,  0.0000,  0.0558,  0.0000, -0.0000,  0.0000,
        -0.0000, -0.0138, -0.0000,  0.1146, -0.0000, -0.0293, -0.0000, -0.0339,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0636,  0.0000,  0.0000,  0.0000,
         0.0748,  0.0000, -0.0844,  0.0367, -0.0264,  0.0000,  0.1079,  0.0000,
         0.0000, -0.0000,  0.0000,  0.0000, -0.0000,  0.0855,  0.1038, -0.0706,
         0.0000,  0.1233, -0.0000, -0.0000, -0.0000, -0.0000,  0.1231,  0.0000,
        -0.0000, -0.0000,  0.0196,  0.0000,  0.0000, -0.0000, -0.0781, -0.0222],
       device='cuda:0')), ('fc3.weight', tensor([[ 0.0000,  0.0769,  0.0130,  ..., -0.0000,  0.0000, -0.0155],
        [-0.0577,  0.0000,  0.0499,  ...,  0.0000,  0.0453,  0.0674],
        [ 0.0000, -0.0514, -0.0000,  ...,  0.0000,  0.0000,  0.0143],
        ...,
        [ 0.0000,  0.0000, -0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0000,  0.0000,  ...,  0.1087, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc3.bias', tensor([ 0.0000,  0.0000,  0.0000,  0.0000,  0.0417,  0.0000,  0.0000, -0.0000,
         0.0000,  0.0475,  0.0574, -0.0131,  0.0000,  0.0000,  0.0000, -0.0000,
         0.0900,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0263, -0.0000,
         0.0000, -0.0745,  0.1950, -0.0000, -0.0880,  0.0000,  0.0000, -0.0000,
         0.1156,  0.0549,  0.0000,  0.0000, -0.0990,  0.0000, -0.0491, -0.0671,
        -0.0000, -0.0000,  0.0000,  0.0853, -0.0000,  0.0000, -0.0000, -0.0000,
         0.0000, -0.0000,  0.0000, -0.0000,  0.0383,  0.0137,  0.0000,  0.0000,
         0.0000, -0.0000,  0.0031,  0.0000,  0.0000, -0.0000,  0.0000, -0.0000,
         0.0000, -0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0999,  0.0000,
         0.0000,  0.1671,  0.0000,  0.0000,  0.0000,  0.0000,  0.0219, -0.0000,
         0.0000, -0.0453,  0.1166,  0.0527,  0.0000,  0.0000,  0.0000,  0.0000,
         0.0724,  0.0000, -0.0000, -0.0101,  0.0416,  0.0000,  0.0000,  0.0000,
         0.1553,  0.0130,  0.0000,  0.0000, -0.0000, -0.0863, -0.0000, -0.0000,
         0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0889,  0.0000, -0.0000,
         0.0000,  0.0000,  0.0773,  0.1086,  0.0000,  0.0000,  0.0000,  0.0000,
         0.1014,  0.0000,  0.0035, -0.0000,  0.0668,  0.0382,  0.0771, -0.0387],
       device='cuda:0')), ('fc4.weight', tensor([[ 0.0000, -0.0000, -0.0737,  ..., -0.1455, -0.0000, -0.0000],
        [-0.0000, -0.0000,  0.0000,  ...,  0.1283,  0.0000, -0.0000],
        [ 0.0000,  0.0000,  0.0000,  ..., -0.0000, -0.1149, -0.0000],
        ...,
        [-0.0000, -0.0262, -0.0175,  ..., -0.0000, -0.0000, -0.0534],
        [ 0.0000,  0.1295,  0.0000,  ...,  0.0000, -0.0025, -0.0517],
        [ 0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.0000]],
       device='cuda:0')), ('fc4.bias', tensor([-0.0108, -0.0000, -0.0000, -0.0000,  0.0000, -0.0807, -0.0000, -0.0015,
         0.0000,  0.0000], device='cuda:0'))])